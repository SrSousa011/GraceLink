pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }

    stages {
        stage('Build') {
            steps {
                script {
                    // Run clean and package before sonar scan
                    bat 'mvn clean package'
                }
            }
        }

        stage('Scan') {
            steps {
                withSonarQubeEnv('sq1') {  // 'sq1' is the SonarQube installation name in Jenkins
                    bat 'mvn sonar:sonar'
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    // Wait for the SonarQube analysis result and check the Quality Gate status
                    def qualityGate = waitForQualityGate()

                    // Check if the Quality Gate passed
                    if (qualityGate.status != 'OK') {
                        echo "Quality Gate failed: ${qualityGate.status}"
                        currentBuild.result = 'ABORTED'  // Abort the pipeline if Quality Gate fails
                        return  // Terminate the pipeline immediately
                    }
                }
            }
        }
    }

    post {
        always {
            // Optionally, you can archive the build results, reports, etc.
            // archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true
        }
    }
}
